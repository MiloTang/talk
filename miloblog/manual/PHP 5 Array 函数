  
	
<style type="text/css">
p, li { white-space: pre-wrap; }
</style>
<p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></p>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">函数<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>描述</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>创建数组。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_change_key_case()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>返回其键均为大写或小写的数组。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_chunk()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>把一个数组分割为新的数组块。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_column()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>返回输入数组中某个单一列的值。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_combine()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>通过合并两个数组（一个为键名数组，一个为键值数组）来创建一个新数组。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_count_values()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>用于统计数组中所有值出现的次数。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_diff()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>比较数组，返回两个数组的差集（只比较键值）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_diff_assoc()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>比较数组，返回两个数组的差集（比较键名和键值）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_diff_key()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>比较数组，返回两个数组的差集（只比较键名）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_diff_uassoc()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>比较数组，返回两个数组的差集（比较键名和键值，使用用户自定义的键名比较函数）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_diff_ukey()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>比较数组，返回两个数组的差集（只比较键名，使用用户自定义的键名比较函数）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_fill()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>用给定的键值填充数组。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_fill_keys()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>用给定的指定键名的键值填充数组。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_filter()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>用回调函数过滤数组中的元素。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_flip()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>反转/交换数组中的键名和对应关联的键值。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_intersect()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>比较数组，返回两个数组的交集（只比较键值）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_intersect_assoc()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>比较数组，返回两个数组的交集（比较键名和键值）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_intersect_key()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>比较数组，返回两个数组的交集（只比较键名）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_intersect_uassoc()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>比较数组，返回两个数组的交集（比较键名和键值，使用用户自定义的键名比较函数）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_intersect_ukey()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>比较数组，返回两个数组的交集（只比较键名，使用用户自定义的键名比较函数）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_key_exists()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>检查指定的键名是否存在于数组中。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_keys()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>返回数组中所有的键名。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_map()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>将用户自定义函数作用到给定数组的每个值上，返回新的值。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_merge()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>把一个或多个数组合并为一个数组。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_merge_recursive()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>递归地把一个或多个数组合并为一个数组。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_multisort()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>对多个数组或多维数组进行排序。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_pad()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>将指定数量的带有指定值的元素插入到数组中。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_pop()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>删除数组中的最后一个元素（出栈）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_product()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>计算数组中所有值的乘积。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_push()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>将一个或多个元素插入数组的末尾（入栈）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_rand()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>从数组中随机选出一个或多个元素，返回键名。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_reduce()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>通过使用用户自定义函数，迭代地将数组简化为一个字符串，并返回。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_replace()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>使用后面数组的值替换第一个数组的值。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_replace_recursive()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>递归地使用后面数组的值替换第一个数组的值。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_reverse()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>将原数组中的元素顺序翻转，创建新的数组并返回。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_search()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>在数组中搜索给定的值，如果成功则返回相应的键名。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_shift()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>删除数组中的第一个元素，并返回被删除元素的值。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_slice()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>返回数组中的选定部分。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_splice()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>把数组中的指定元素去掉并用其它值取代。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_sum()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>返回数组中所有值的和。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_udiff()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>比较数组，返回两个数组的差集（只比较键值，使用一个用户自定义的键名比较函数）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_udiff_assoc()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>比较数组，返回两个数组的差集（比较键名和键值，使用内建函数比较键名，使用用户自定义函数比较键值）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_udiff_uassoc()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>比较数组，返回两个数组的差集（比较键名和键值，使用两个用户自定义的键名比较函数）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_uintersect()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>比较数组，返回两个数组的交集（只比较键值，使用一个用户自定义的键名比较函数）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_uintersect_assoc()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>比较数组，返回两个数组的交集（比较键名和键值，使用内建函数比较键名，使用用户自定义函数比较键值）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_uintersect_uassoc()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>比较数组，返回两个数组的交集（比较键名和键值，使用两个用户自定义的键名比较函数）。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_unique()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>删除数组中重复的值。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_unshift()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>在数组开头插入一个或多个元素。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_values()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>返回数组中所有的值。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_walk()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>对数组中的每个成员应用用户函数。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">array_walk_recursive()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>对数组中的每个成员递归地应用用户函数。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">arsort()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>对关联数组按照键值进行降序排序。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">asort()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>对关联数组按照键值进行升序排序。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">compact()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>创建一个包含变量名和它们的值的数组。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">count()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>返回数组中元素的数目。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">current()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>返回数组中的当前元素。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">each()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>返回数组中当前的键／值对。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">end()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>将数组的内部指针指向最后一个元素。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">extract()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>从数组中将变量导入到当前的符号表。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in_array()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>检查数组中是否存在指定的值。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">key()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>从关联数组中取得键名。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">krsort()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>对关联数组按照键名降序排序。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">ksort()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>对关联数组按照键名升序排序。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">list()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>把数组中的值赋给一些数组变量。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">natcasesort()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>用"自然排序"算法对数组进行不区分大小写字母的排序。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">natsort()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>用"自然排序"算法对数组排序。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">next()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>将数组中的内部指针向后移动一位。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pos()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>current()<span style=" color:#c0c0c0;"> </span>的别名。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">prev()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>将数组的内部指针倒回一位。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">range()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>创建一个包含指定范围的元素的数组。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">reset()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>将数组的内部指针指向第一个元素。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">rsort()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>对数值数组进行降序排序。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">shuffle()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>把数组中的元素按随机顺序重新排列。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">sizeof()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>count()<span style=" color:#c0c0c0;"> </span>的别名。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">sort()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>对数值数组进行升序排序。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">uasort()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>使用用户自定义的比较函数对数组中的键值进行排序。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">uksort()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>使用用户自定义的比较函数对数组中的键名进行排序。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">usort()<span style=" color:#c0c0c0;">&nbsp;&nbsp;&nbsp;&nbsp;</span>使用用户自定义的比较函数对数组进行排序。</pre>