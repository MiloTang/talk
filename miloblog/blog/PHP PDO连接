  
	
<style type="text/css">
p, li { white-space: pre-wrap; }
</style>
<p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></p>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">连接是通过创建<span style=" color:#c0c0c0;"> </span>PDO<span style=" color:#c0c0c0;"> </span>基类的实例而建立的。不管使用哪种驱动程序，都是用<span style=" color:#c0c0c0;"> </span>PDO<span style=" color:#c0c0c0;"> </span>类名。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">连接到<span style=" color:#c0c0c0;"> </span>MySQL</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">&lt;?php</span></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$dbh<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>new<span style=" color:#c0c0c0;"> </span>PDO('mysql:host=localhost;dbname=test',<span style=" color:#c0c0c0;"> </span>$user,<span style=" color:#c0c0c0;"> </span>$pass);</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">?&gt;</span></pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">注意：如果有任何连接错误，将抛出一个<span style=" color:#c0c0c0;"> </span>PDOException<span style=" color:#c0c0c0;"> </span>异常对象。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">处理连接错误</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">&lt;?php</span></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">try<span style=" color:#c0c0c0;"> </span>{</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#c0c0c0;">    </span>$dbh<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>new<span style=" color:#c0c0c0;"> </span>PDO('mysql:host=localhost;dbname=mysql',<span style=" color:#c0c0c0;"> </span>$user,<span style=" color:#c0c0c0;"> </span>$pass);</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#c0c0c0;">    </span>foreach($dbh-&gt;query('SELECT<span style=" color:#c0c0c0;"> </span>*<span style=" color:#c0c0c0;"> </span>from<span style=" color:#c0c0c0;"> </span>user')<span style=" color:#c0c0c0;"> </span>as<span style=" color:#c0c0c0;"> </span>$row)<span style=" color:#c0c0c0;"> </span>{</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#c0c0c0;">        </span>print_r($row);</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#c0c0c0;">    </span>}</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#c0c0c0;">    </span>$dbh<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>null;</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">}<span style=" color:#c0c0c0;"> </span>catch<span style=" color:#c0c0c0;"> </span>(PDOException<span style=" color:#c0c0c0;"> </span>$e)<span style=" color:#c0c0c0;"> </span>{</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#c0c0c0;">    </span>print<span style=" color:#c0c0c0;"> </span>"Error!:<span style=" color:#c0c0c0;"> </span>"<span style=" color:#c0c0c0;"> </span>.<span style=" color:#c0c0c0;"> </span>$e-&gt;getMessage()<span style=" color:#c0c0c0;"> </span>.<span style=" color:#c0c0c0;"> </span>"&lt;br/&gt;";</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#c0c0c0;">    </span>die();</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">}</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">?&gt;</span></pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">连接数据成功后，返回一个<span style=" color:#c0c0c0;"> </span>PDO<span style=" color:#c0c0c0;"> </span>类的实例给脚本，此连接在<span style=" color:#c0c0c0;"> </span>PDO<span style=" color:#c0c0c0;"> </span>对象的生存周期中保持活动。</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">要想关闭连接，需要销毁对象以确保所有剩余到它的引用都被删除，可以赋一个<span style=" color:#c0c0c0;"> </span>NULL<span style=" color:#c0c0c0;"> </span>值给对象变量。</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">如果不这么做，PHP<span style=" color:#c0c0c0;"> </span>在脚本结束时会自动关闭连接。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">关闭一个连接:</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">&lt;?php</span></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$dbh<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>new<span style=" color:#c0c0c0;"> </span>PDO('mysql:host=localhost;dbname=test',<span style=" color:#c0c0c0;"> </span>$user,<span style=" color:#c0c0c0;"> </span>$pass);</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">//<span style=" color:#c0c0c0;"> </span>在此使用连接</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">//<span style=" color:#c0c0c0;"> </span>现在运行完成，在此关闭连接</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$dbh<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>null;</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">?&gt;</span></pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">很多<span style=" color:#c0c0c0;"> </span>web<span style=" color:#c0c0c0;"> </span>应用程序通过使用到数据库服务的持久连接获得好处。</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">持久连接在脚本结束后不会被关闭，且被缓存，当另一个使用相同凭证的脚本连接请求时被重用。</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">持久连接缓存可以避免每次脚本需要与数据库回话时建立一个新连接的开销，从而让<span style=" color:#c0c0c0;"> </span>web<span style=" color:#c0c0c0;"> </span>应用程序更快。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">持久化连接</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">&lt;?php</span></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$dbh<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>new<span style=" color:#c0c0c0;"> </span>PDO('mysql:host=localhost;dbname=test',<span style=" color:#c0c0c0;"> </span>$user,<span style=" color:#c0c0c0;"> </span>$pass,<span style=" color:#c0c0c0;"> </span>array(</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#c0c0c0;">    </span>PDO::ATTR_PERSISTENT<span style=" color:#c0c0c0;"> </span>=&gt;<span style=" color:#c0c0c0;"> </span>true</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">));</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">?&gt;</span></pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">注意：如果想使用持久连接，必须在传递给<span style=" color:#c0c0c0;"> </span>PDO<span style=" color:#c0c0c0;"> </span>构造函数的驱动选项数组中设置<span style=" color:#c0c0c0;"> </span>PDO::ATTR_PERSISTENT<span style=" color:#c0c0c0;"> </span>。如果是在对象初始化之后用<span style=" color:#c0c0c0;"> </span>PDO::setAttribute()<span style=" color:#c0c0c0;"> </span>设置此属性，则驱动程序将不会使用持久连接。<span style=" color:#c0c0c0;"> </span></pre>