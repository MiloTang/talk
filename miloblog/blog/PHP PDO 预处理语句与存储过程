  
	
<style type="text/css">
p, li { white-space: pre-wrap; }
</style>
<p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></p>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">很多更成熟的数据库都支持预处理语句的概念。</pre>

<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">什么是预处理语句？可以把它看作是想要运行的<span style=" color:#c0c0c0;"> </span>SQL<span style=" color:#c0c0c0;"> </span>的一种编译过的模板，它可以使用变量参数进行定制。预处理语句可以带来两大好处：</pre>

<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#c0c0c0;">    </span>查询仅需解析（或预处理）一次，但可以用相同或不同的参数执行多次。当查询准备好后，数据库将分析、编译和优化执行该查询的计划。对于复杂的查询，此过程要花费较长的时间，如果需要以不同参数多次重复相同的查询，那么该过程将大大降低应用程序的速度。通过使用预处理语句，可以避免重复分析/编译/优化周期。简言之，预处理语句占用更少的资源，因而运行得更快。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#c0c0c0;">    </span>提供给预处理语句的参数不需要用引号括起来，驱动程序会自动处理。如果应用程序只使用预处理语句，可以确保不会发生SQL<span style=" color:#c0c0c0;"> </span>注入。（然而，如果查询的其他部分是由未转义的输入来构建的，则仍存在<span style=" color:#c0c0c0;"> </span>SQL<span style=" color:#c0c0c0;"> </span>注入的风险）。</pre>

<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">预处理语句如此有用，以至于它们唯一的特性是在驱动程序不支持的时PDO<span style=" color:#c0c0c0;"> </span>将模拟处理。这样可以确保不管数据库是否具有这样的功能，都可以确保应用程序可以用相同的数据访问模式。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">用预处理语句进行重复插入</pre>

<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">下面例子通过用<span style=" color:#c0c0c0;"> </span>name<span style=" color:#c0c0c0;"> </span>和<span style=" color:#c0c0c0;"> </span>value<span style=" color:#c0c0c0;"> </span>替代相应的命名占位符来执行一个插入查询</pre>

<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">&lt;?php</span></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>$dbh-&gt;prepare("INSERT<span style=" color:#c0c0c0;"> </span>INTO<span style=" color:#c0c0c0;"> </span>REGISTRY<span style=" color:#c0c0c0;"> </span>(name,<span style=" color:#c0c0c0;"> </span>value)<span style=" color:#c0c0c0;"> </span>VALUES<span style=" color:#c0c0c0;"> </span>(:name,<span style=" color:#c0c0c0;"> </span>:value)");</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt-&gt;bindParam(':name',<span style=" color:#c0c0c0;"> </span>$name);</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt-&gt;bindParam(':value',<span style=" color:#c0c0c0;"> </span>$value);</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">//<span style=" color:#c0c0c0;"> </span>插入一行</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$name<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>'one';</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$value<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>1;</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt-&gt;execute();</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">//<span style=" color:#c0c0c0;">  </span>用不同的值插入另一行</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$name<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>'two';</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$value<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>2;</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt-&gt;execute();</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">?&gt;</span></pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">用预处理语句进行重复插入</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">下面例子通过用<span style=" color:#c0c0c0;"> </span>name<span style=" color:#c0c0c0;"> </span>和<span style=" color:#c0c0c0;"> </span>value<span style=" color:#c0c0c0;"> </span>取代<span style=" color:#c0c0c0;"> </span>?<span style=" color:#c0c0c0;"> </span>占位符的位置来执行一条插入查询。</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">&lt;?php</span></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>$dbh-&gt;prepare("INSERT<span style=" color:#c0c0c0;"> </span>INTO<span style=" color:#c0c0c0;"> </span>REGISTRY<span style=" color:#c0c0c0;"> </span>(name,<span style=" color:#c0c0c0;"> </span>value)<span style=" color:#c0c0c0;"> </span>VALUES<span style=" color:#c0c0c0;"> </span>(?,<span style=" color:#c0c0c0;"> </span>?)");</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt-&gt;bindParam(1,<span style=" color:#c0c0c0;"> </span>$name);</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt-&gt;bindParam(2,<span style=" color:#c0c0c0;"> </span>$value);</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">//<span style=" color:#c0c0c0;"> </span>插入一行</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$name<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>'one';</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$value<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>1;</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt-&gt;execute();</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">//<span style=" color:#c0c0c0;"> </span>用不同的值插入另一行</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$name<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>'two';</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$value<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>2;</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt-&gt;execute();</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">?&gt;</span></pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">使用预处理语句获取数据</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">下面例子获取数据基于键值已提供的形式。用户的输入被自动用引号括起来，因此不会有<span style=" color:#c0c0c0;"> </span>SQL<span style=" color:#c0c0c0;"> </span>注入攻击的危险。</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">&lt;?php</span></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>$dbh-&gt;prepare("SELECT<span style=" color:#c0c0c0;"> </span>*<span style=" color:#c0c0c0;"> </span>FROM<span style=" color:#c0c0c0;"> </span>REGISTRY<span style=" color:#c0c0c0;"> </span>where<span style=" color:#c0c0c0;"> </span>name<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>?");</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">if<span style=" color:#c0c0c0;"> </span>($stmt-&gt;execute(array($_GET['name'])))<span style=" color:#c0c0c0;"> </span>{</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#c0c0c0;">  </span>while<span style=" color:#c0c0c0;"> </span>($row<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>$stmt-&gt;fetch())<span style=" color:#c0c0c0;"> </span>{</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#c0c0c0;">    </span>print_r($row);</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#c0c0c0;">  </span>}</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">}</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">?&gt;</span></pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">如果数据库驱动支持，应用程序还可以绑定输出和输入参数.输出参数通常用于从存储过程获取值。输出参数使用起来比输入参数要稍微复杂一些，因为当绑定一个输出参数时，必须知道给定参数的长度。如果为参数绑定的值大于建议的长度，就会产生一个错误。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">带输出参数调用存储过程</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">&lt;?php</span></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>$dbh-&gt;prepare("CALL<span style=" color:#c0c0c0;"> </span>sp_returns_string(?)");</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt-&gt;bindParam(1,<span style=" color:#c0c0c0;"> </span>$return_value,<span style=" color:#c0c0c0;"> </span>PDO::PARAM_STR,<span style=" color:#c0c0c0;"> </span>4000);<span style=" color:#c0c0c0;"> </span></pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">//<span style=" color:#c0c0c0;"> </span>调用存储过程</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt-&gt;execute();</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">print<span style=" color:#c0c0c0;"> </span>"procedure<span style=" color:#c0c0c0;"> </span>returned<span style=" color:#c0c0c0;"> </span>$return_value\n";</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">?&gt;</span></pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">还可以指定同时具有输入和输出值的参数，其语法类似于输出参数。在下一个例子中，字符串"hello"被传递给存储过程，当存储过程返回时，hello<span style=" color:#c0c0c0;"> </span>被替换为该存储过程返回的值。</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">带输入/输出参数调用存储过程</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">&lt;?php</span></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>$dbh-&gt;prepare("CALL<span style=" color:#c0c0c0;"> </span>sp_takes_string_returns_string(?)");</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$value<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>'hello';</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt-&gt;bindParam(1,<span style=" color:#c0c0c0;"> </span>$value,<span style=" color:#c0c0c0;"> </span>PDO::PARAM_STR|PDO::PARAM_INPUT_OUTPUT,<span style=" color:#c0c0c0;"> </span>4000);<span style=" color:#c0c0c0;"> </span></pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">//<span style=" color:#c0c0c0;"> </span>调用存储过程</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt-&gt;execute();</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">print<span style=" color:#c0c0c0;"> </span>"procedure<span style=" color:#c0c0c0;"> </span>returned<span style=" color:#c0c0c0;"> </span>$value\n";</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">?&gt;</span></pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">占位符的无效使用</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">&lt;?php</span></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>$dbh-&gt;prepare("SELECT<span style=" color:#c0c0c0;"> </span>*<span style=" color:#c0c0c0;"> </span>FROM<span style=" color:#c0c0c0;"> </span>REGISTRY<span style=" color:#c0c0c0;"> </span>where<span style=" color:#c0c0c0;"> </span>name<span style=" color:#c0c0c0;"> </span>LIKE<span style=" color:#c0c0c0;"> </span>'%?%'");</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt-&gt;execute(array($_GET['name']));</pre>
<pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">//<span style=" color:#c0c0c0;"> </span>占位符必须被用在整个值的位置</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt<span style=" color:#c0c0c0;"> </span>=<span style=" color:#c0c0c0;"> </span>$dbh-&gt;prepare("SELECT<span style=" color:#c0c0c0;"> </span>*<span style=" color:#c0c0c0;"> </span>FROM<span style=" color:#c0c0c0;"> </span>REGISTRY<span style=" color:#c0c0c0;"> </span>where<span style=" color:#c0c0c0;"> </span>name<span style=" color:#c0c0c0;"> </span>LIKE<span style=" color:#c0c0c0;"> </span>?");</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">$stmt-&gt;execute(array("%$_GET[name]%"));</pre>
<pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600; color:#000080;">?&gt;</span></pre>