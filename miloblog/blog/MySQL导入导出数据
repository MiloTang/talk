  
	<pre style="background-color:#fdf6e3;color:#586e75;font-family:'Source Code Pro';font-size:13.5pt;">MySQL <span style="font-family:'Courier New';">导入数据<br></span>MySQL <span style="font-family:'Courier New';">中提供了</span>LOAD DATA INFILE<span style="font-family:'Courier New';">语句来插入数据。如果指定</span>LOCAL<span style="font-family:'Courier New';">关键词，则表明从客户主机上按路径读取文件。如果没有指定，则文件在服务器上按路径读取文件。<br></span><span style="font-family:'Courier New';"><br></span><span style="font-family:'Courier New';">你能明确地在</span>LOAD DATA<span style="font-family:'Courier New';">语句中指出列值的分隔符和行尾标记，但是默认标记是定位符和换行符。<br></span><span style="font-family:'Courier New';"><br></span><span style="font-family:'Courier New';">两个命令的 </span>FIELDS <span style="font-family:'Courier New';">和 </span>LINES <span style="font-family:'Courier New';">子句的语法是一样的。两个子句都是可选的，但是如果两个同时被指定，</span>FIELDS <span style="font-family:'Courier New';">子句必须出现在 </span>LINES <span style="font-family:'Courier New';">子句之前。<br></span><span style="font-family:'Courier New';"><br></span><span style="font-family:'Courier New';">如果用户指定一个 </span>FIELDS <span style="font-family:'Courier New';">子句，它的子句 （</span>TERMINATED BY<span style="font-family:'Courier New';">、</span>[OPTIONALLY] ENCLOSED BY <span style="font-family:'Courier New';">和 </span>ESCAPED BY) <span style="font-family:'Courier New';">也是可选的，不过，用户必须至少指定它们中的一个。<br></span><span style="font-family:'Courier New';"><br></span>mysql&gt; LOAD DATA LOCAL INFILE 'dump.txt' INTO TABLE tab<br>-&gt; FIELDS TERMINATED BY ':'<br>-&gt; LINES TERMINATED BY '\r\n';<br>LOAD DATA <span style="font-family:'Courier New';">默认情况下是按照数据文件中列的顺序插入数据的，如果数据文件中的列与插入表中的列不一致，则需要指定列的顺序。<br></span><span style="font-family:'Courier New';">如，在数据文件中的列顺序是 </span>a,b,c<span style="font-family:'Courier New';">，但在插入表的列顺序为</span>b,c,a<span style="font-family:'Courier New';">，则数据导入语法如下：<br></span>mysql&gt; LOAD DATA LOCAL INFILE 'dump.txt'<br>-&gt; INTO TABLE tab (b, c, a);<br><span style="font-family:'Courier New';">使用 </span>mysqlimport <span style="font-family:'Courier New';">导入数据<br></span><span style="font-family:'Courier New';"><br></span>mysqlimport<span style="font-family:'Courier New';">客户端提供了</span>LOAD DATA INFILEQL<span style="font-family:'Courier New';">语句的一个命令行接口。</span>mysqlimport<span style="font-family:'Courier New';">的大多数选项直接对应</span>LOAD DATA INFILE<span style="font-family:'Courier New';">子句。<br></span><span style="font-family:'Courier New';">从文件 </span>dump.txt <span style="font-family:'Courier New';">中将数据导入到 </span>mytbl <span style="font-family:'Courier New';">数据表中</span>, <span style="font-family:'Courier New';">可以使用以下命令：</span>$ mysqlimport -u root -p --local database_name dump.txt<br>mysqlimport<span style="font-family:'Courier New';">命令可以指定选项来设置指定格式</span>,<span style="font-family:'Courier New';">命令语句格式如下：<br></span><span style="font-family:'Courier New';"><br></span>$ mysqlimport -u root -p --local --fields-terminated-by=":" \<br>--lines-terminated-by="\r\n"  database_name dump.txt<br>mysqlimport <span style="font-family:'Courier New';">语句中使用 </span>--columns <span style="font-family:'Courier New';">选项来设置列的顺序：<br></span><span style="font-family:'Courier New';"><br></span>$ mysqlimport -u root -p --local --columns=b,c,a \<br>database_name dump.txt<br>mysqlimport<span style="font-family:'Courier New';">的常用选项介绍<br></span><span style="font-family:'Courier New';">选项 功能<br></span>-d or --delete <span style="font-family:'Courier New';">新数据导入数据表中之前删除数据数据表中的所有信息<br></span>-f or --force  <span style="font-family:'Courier New';">不管是否遇到错误，</span>mysqlimport<span style="font-family:'Courier New';">将强制继续插入数据<br></span>-i or --ignore     mysqlimport<span style="font-family:'Courier New';">跳过或者忽略那些有相同唯一 关键字的行， 导入文件中的数据将被忽略。<br></span>-l or -lock-tables     <span style="font-family:'Courier New';">数据被插入之前锁住表，这样就防止了， 你在更新数据库时，用户的查询和更新受到影响。<br></span>-r or -replace     <span style="font-family:'Courier New';">这个选项与－</span>i<span style="font-family:'Courier New';">选项的作用相反；此选项将替代 表中有相同唯一关键字的记录。<br></span>--fields-enclosed- by= char    <span style="font-family:'Courier New';">指定文本文件中数据的记录时以什么括起的， 很多情况下 数据以双引号括起。 默认的情况下数据是没有被字符括起的。<br></span>--fields-terminated- by=char   <span style="font-family:'Courier New';">指定各个数据的值之间的分隔符，在句号分隔的文件中， 分隔符是句号。您可以用此选项指定数据之间的分隔符。 默认的分隔符是跳格符（</span>Tab<span style="font-family:'Courier New';">）<br></span>--lines-terminated- by=str <span style="font-family:'Courier New';">此选项指定文本文件中行与行之间数据的分隔字符串 或者字符。 默认的情况下</span>mysqlimport<span style="font-family:'Courier New';">以</span>newline<span style="font-family:'Courier New';">为行分隔符。 您可以选择用一个字符串来替代一个单个的字符： 一个新行或者一个回车。<br></span><span style="font-family:'Courier New';"><br></span>mysqlimport<span style="font-family:'Courier New';">命令常用的选项还有</span>-v <span style="font-family:'Courier New';">显示版本（</span>version<span style="font-family:'Courier New';">）， </span>-p <span style="font-family:'Courier New';">提示输入密码（</span>password<span style="font-family:'Courier New';">）等。<br><br></span>MySQL <span style="font-family:'Courier New';">导出数据<br></span>MySQL<span style="font-family:'Courier New';">中你可以使用</span>SELECT...INTO OUTFILE<span style="font-family:'Courier New';">语句来简单的导出数据到文本文件上。<br></span><span style="font-family:'Courier New';">使用 </span>SELECT ... INTO OUTFILE <span style="font-family:'Courier New';">语句导出数据<br></span><span style="font-family:'Courier New';"><br></span><span style="font-family:'Courier New';">以下实例中我们将数据表 </span>tab <span style="font-family:'Courier New';">数据导出到 </span>/tmp.txt <span style="font-family:'Courier New';">文件中</span>:<br><br>mysql&gt; SELECT * FROM tab<br>-&gt; INTO OUTFILE '/tmp.txt';<br><span style="font-family:'Courier New';">你可以通过命令选项来设置数据输出的指定格式，以下实例为导出 </span>CSV <span style="font-family:'Courier New';">格式：<br></span><span style="font-family:'Courier New';"><br></span>mysql&gt; SELECT * FROM tab INTO OUTFILE '/tmp.txt'<br>-&gt; FIELDS TERMINATED BY ',' ENCLOSED BY '"'<br>-&gt; LINES TERMINATED BY '\r\n';<br><span style="font-family:'Courier New';">在下面的例子中，生成一个文件，各值用逗号隔开。这种格式可以被许多程序使用。<br></span><span style="font-family:'Courier New';"><br></span>SELECT a,b,a+b INTO OUTFILE '/tmp.text'<br>FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '"'<br>LINES TERMINATED BY '\n'<br>FROM tab;<br>SELECT ... INTO OUTFILE <span style="font-family:'Courier New';">语句有以下属性</span>:<br><br>LOAD DATA INFILE<span style="font-family:'Courier New';">是</span>SELECT ... INTO OUTFILE<span style="font-family:'Courier New';">的逆操作，</span>SELECT<span style="font-family:'Courier New';">句法。为了将一个数据库的数据写入一个文件，使用</span>SELECT ... INTO OUTFILE<span style="font-family:'Courier New';">，为了将文件读回数据库，使用</span>LOAD DATA INFILE<span style="font-family:'Courier New';">。<br></span>SELECT...INTO OUTFILE 'file_name'<span style="font-family:'Courier New';">形式的</span>SELECT<span style="font-family:'Courier New';">可以把被选择的行写入一个文件中。该文件被创建到服务器主机上，因此您必须拥有</span>FILE<span style="font-family:'Courier New';">权限，才能使用此语法。<br></span><span style="font-family:'Courier New';">输出不能是一个已存在的文件。防止文件数据被篡改。<br></span><span style="font-family:'Courier New';">你需要有一个登陆服务器的账号来检索文件。否则 </span>SELECT ... INTO OUTFILE <span style="font-family:'Courier New';">不会起任何作用。<br></span><span style="font-family:'Courier New';">在</span>UNIX<span style="font-family:'Courier New';">中，该文件被创建后是可读的，权限由</span>MySQL<span style="font-family:'Courier New';">服务器所拥有。这意味着，虽然你就可以读取该文件，但可能无法将其删除。<br></span><span style="font-family:'Courier New';">导出表作为原始数据<br></span><span style="font-family:'Courier New';"><br></span>mysqldump<span style="font-family:'Courier New';">是</span>mysql<span style="font-family:'Courier New';">用于转存储数据库的实用程序。它主要产生一个</span>SQL<span style="font-family:'Courier New';">脚本，其中包含从头重新创建数据库所必需的命令</span>CREATE TABLE INSERT<span style="font-family:'Courier New';">等。<br></span><span style="font-family:'Courier New';"><br></span><span style="font-family:'Courier New';">使用</span>mysqldump<span style="font-family:'Courier New';">导出数据需要使用 </span>--tab <span style="font-family:'Courier New';">选项来指定导出文件指定的目录，该目标必须是可写的。<br></span><span style="font-family:'Courier New';"><br></span><span style="font-family:'Courier New';">以下实例将数据表 </span>runoob_tbl <span style="font-family:'Courier New';">导出到 </span>/tmp <span style="font-family:'Courier New';">目录中：<br></span><span style="font-family:'Courier New';"><br></span>$ mysqldump -u root -p --no-create-info \<br>--tab=/tmp RUNOOB tab<br><span style="font-family:'Courier New';">导出</span>SQL<span style="font-family:'Courier New';">格式的数据<br></span><span style="font-family:'Courier New';"><br></span><span style="font-family:'Courier New';">导出</span>SQL<span style="font-family:'Courier New';">格式的数据到指定文件，如下所示：<br></span><span style="font-family:'Courier New';"><br></span>$ mysqldump -u root -p database tab &gt; dump.txt<br></pre>